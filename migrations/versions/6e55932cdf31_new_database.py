"""new database

Revision ID: 6e55932cdf31
Revises: 
Create Date: 2025-05-05 10:18:47.564732

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6e55932cdf31'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dishes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('proteins', sa.Float(), nullable=True),
    sa.Column('fats', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('goal', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ingredients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('muscle_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_muscle_groups_id'), 'muscle_groups', ['id'], unique=False)
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_questions_id'), 'questions', ['id'], unique=False)
    op.create_table('restrictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', name='genderenum'), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('goal', sa.Enum('weight_loss', 'muscle_gain', 'increase_activity', name='goalenum'), nullable=True),
    sa.Column('activity', sa.Enum('low', 'middle', 'high', name='activityenum'), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('training_place', sa.Enum('home', 'outside', 'mixed', name='trainingplaceenum'), nullable=True),
    sa.Column('load', sa.Enum('physical', 'intellegentive', name='loadenum'), nullable=True),
    sa.Column('workout_week_days', sa.Integer(), nullable=True),
    sa.Column('gems', sa.Integer(), nullable=True),
    sa.Column('expirience', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('is_right', sa.Boolean(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_answers_id'), 'answers', ['id'], unique=False)
    op.create_table('blitz_polls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('expirience_earned', sa.Integer(), nullable=True),
    sa.Column('gems_earned', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blitz_polls_id'), 'blitz_polls', ['id'], unique=False)
    op.create_table('dish_ingredient',
    sa.Column('dish_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dish_id'], ['dishes.id'], ),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], ),
    sa.PrimaryKeyConstraint('dish_id', 'ingredient_id')
    )
    op.create_table('exercises',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('training_place', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('sets_number_default', sa.Integer(), nullable=False),
    sa.Column('repetitions_default', sa.Integer(), nullable=False),
    sa.Column('gems_default', sa.Integer(), nullable=False),
    sa.Column('expirience_default', sa.Integer(), nullable=False),
    sa.Column('expirience_level', sa.String(), nullable=False),
    sa.Column('muscle_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['muscle_group_id'], ['muscle_groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercises_id'), 'exercises', ['id'], unique=False)
    op.create_table('meal_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('total_calories', sa.Float(), nullable=True),
    sa.Column('proteins', sa.Float(), nullable=True),
    sa.Column('fats', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=False),
    sa.Column('access_token_expires', sa.DateTime(timezone=True), nullable=False),
    sa.Column('refresh_token_expires', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_token'),
    sa.UniqueConstraint('refresh_token')
    )
    op.create_index(op.f('ix_tokens_id'), 'tokens', ['id'], unique=False)
    op.create_table('user_restriction',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('restriction_id', sa.Integer(), nullable=False),
    sa.Column('dish_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dish_id'], ['dishes.id'], ),
    sa.ForeignKeyConstraint(['restriction_id'], ['restrictions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'restriction_id', 'dish_id')
    )
    op.create_table('workout_plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('week_start_date', sa.Date(), nullable=False),
    sa.Column('week_end_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workout_plan_id'), 'workout_plan', ['id'], unique=False)
    op.create_table('blitz_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gems', sa.Integer(), nullable=False),
    sa.Column('expirience', sa.Integer(), nullable=False),
    sa.Column('is_answered', sa.Boolean(), nullable=True),
    sa.Column('blitz_poll_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['blitz_poll_id'], ['blitz_polls.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blitz_questions_id'), 'blitz_questions', ['id'], unique=False)
    op.create_table('exercise_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercise_types_id'), 'exercise_types', ['id'], unique=False)
    op.create_table('meals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.Column('dish_id', sa.Integer(), nullable=True),
    sa.Column('grams', sa.Float(), nullable=True),
    sa.Column('proteins', sa.Float(), nullable=True),
    sa.Column('fats', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('is_eaten', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['dish_id'], ['dishes.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['meal_plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('random_exercises',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sets_number', sa.Integer(), nullable=False),
    sa.Column('repetitions', sa.Integer(), nullable=False),
    sa.Column('gems', sa.Integer(), nullable=False),
    sa.Column('expirience', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_random_exercises_id'), 'random_exercises', ['id'], unique=False)
    op.create_table('workout_days',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workout_plan_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('muscle_group_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['muscle_group_id'], ['muscle_groups.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workout_plan_id'], ['workout_plan.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workout_days_id'), 'workout_days', ['id'], unique=False)
    op.create_table('planned_exercises',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sets_number', sa.Integer(), nullable=False),
    sa.Column('repetitions', sa.Integer(), nullable=False),
    sa.Column('gems', sa.Integer(), nullable=False),
    sa.Column('expirience', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('workout_day_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workout_day_id'], ['workout_days.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_planned_exercises_id'), 'planned_exercises', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_planned_exercises_id'), table_name='planned_exercises')
    op.drop_table('planned_exercises')
    op.drop_index(op.f('ix_workout_days_id'), table_name='workout_days')
    op.drop_table('workout_days')
    op.drop_index(op.f('ix_random_exercises_id'), table_name='random_exercises')
    op.drop_table('random_exercises')
    op.drop_table('meals')
    op.drop_index(op.f('ix_exercise_types_id'), table_name='exercise_types')
    op.drop_table('exercise_types')
    op.drop_index(op.f('ix_blitz_questions_id'), table_name='blitz_questions')
    op.drop_table('blitz_questions')
    op.drop_index(op.f('ix_workout_plan_id'), table_name='workout_plan')
    op.drop_table('workout_plan')
    op.drop_table('user_restriction')
    op.drop_index(op.f('ix_tokens_id'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_table('meal_plans')
    op.drop_index(op.f('ix_exercises_id'), table_name='exercises')
    op.drop_table('exercises')
    op.drop_table('dish_ingredient')
    op.drop_index(op.f('ix_blitz_polls_id'), table_name='blitz_polls')
    op.drop_table('blitz_polls')
    op.drop_index(op.f('ix_answers_id'), table_name='answers')
    op.drop_table('answers')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('restrictions')
    op.drop_index(op.f('ix_questions_id'), table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_muscle_groups_id'), table_name='muscle_groups')
    op.drop_table('muscle_groups')
    op.drop_table('ingredients')
    op.drop_table('dishes')
    # ### end Alembic commands ###
